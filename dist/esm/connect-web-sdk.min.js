export const IFRAME_ID="connectIframe";export const STYLES_ID="connectStyles";export const PLATFORM_IFRAME="iframe";export const PLATFORM_POPUP="web";export const CONNECT_SDK_VERSION="PACKAGE_VERSION";export const POPUP_WIDTH=600;export const POPUP_HEIGHT=600;export const CONNECT_POPUP_WIDTH=520;export const CONNECT_POPUP_HEIGHT=720;export const ACK_EVENT="ack";export const CANCEL_EVENT="cancel";export const URL_EVENT="url";export const DONE_EVENT="done";export const ERROR_EVENT="error";export const PING_EVENT="ping";export const WINDOW_EVENT="window";export const ROUTE_EVENT="route";export const USER_EVENT="user";export const CLOSE_POPUP_EVENT="closePopup";
import{IFRAME_ID,POPUP_WIDTH,POPUP_HEIGHT,CONNECT_POPUP_HEIGHT,CONNECT_POPUP_WIDTH,ACK_EVENT,CANCEL_EVENT,URL_EVENT,DONE_EVENT,ERROR_EVENT,PING_EVENT,WINDOW_EVENT,ROUTE_EVENT,USER_EVENT,STYLES_ID,CONNECT_SDK_VERSION,CLOSE_POPUP_EVENT,PLATFORM_POPUP,PLATFORM_IFRAME}from"./constants";let evHandlers,onMessageFn,connectUrl,iframe,metaEl,targetWindow,connectOrigin,popupWindow;const defaultEventHandlers={onLoad:()=>{},onUser:()=>{},onRoute:()=>{}};export const Connect={destroy(){iframe&&iframe.parentNode&&iframe.parentNode.removeChild(iframe),metaEl&&metaEl.parentNode&&metaEl.parentNode.removeChild(metaEl),!iframe&&targetWindow&&targetWindow.close(),iframe=void 0,metaEl=void 0,window.removeEventListener("message",onMessageFn)},launch(a,b){let c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};if(connectUrl=a,evHandlers={...defaultEventHandlers,...b},connectOrigin=new URL(connectUrl).origin,c.popup){const a={toolbar:"no",location:"no",status:"no",menubar:"no",width:CONNECT_POPUP_HEIGHT,height:CONNECT_POPUP_WIDTH,top:window.self.outerHeight/2+window.self.screenY-CONNECT_POPUP_HEIGHT/2,left:window.self.outerWidth/2+window.self.screenX-CONNECT_POPUP_WIDTH/2},b={...a,...c.popupOptions},d=window.open(connectUrl,"targetWindow","toolbar=".concat(a.toolbar,",location=").concat(a.location,",status=").concat(a.status,",menubar=").concat(a.menubar,",width=").concat(b.width,",height=").concat(b.height,",top=").concat(b.top,",left=").concat(b.left));return d?(targetWindow=d,d.focus(),this.initPostMessage(c),evHandlers.onLoad&&evHandlers.onLoad()):evHandlers.onError({reason:"error",code:1403}),d}else{if(iframe&&iframe.parentNode)throw new Error("You must destroy the iframe before you can open a new one. Call \"destroy()\"");if(!document.getElementById(STYLES_ID)){const a=document.createElement("style");a.id=STYLES_ID,a.type="text/css",a.innerHTML="#".concat(IFRAME_ID," {\n          position: absolute;\n          left: 0;\n          top: 0;\n          width: 100%;\n          height: 100%;\n          z-index: 10;\n          background: rgba(0,0,0,0.8);\n        }"),document.getElementsByTagName("head")[0].appendChild(a)}let a=document.querySelectorAll("meta[name=\"viewport\"]");if(0===a.length&&(metaEl=document.createElement("meta"),metaEl.setAttribute("name","viewport"),metaEl.setAttribute("content","initial-scale=1"),document.head.appendChild(metaEl)),iframe=document.createElement("iframe"),iframe.src=connectUrl,iframe.setAttribute("id",IFRAME_ID),iframe.setAttribute("frameborder","0"),iframe.setAttribute("scrolling","no"),iframe.setAttribute("aria-label","Launching Modal"),iframe.setAttribute("title","Launching Modal"),c.overlay&&iframe.setAttribute("style","background: ".concat(c.overlay,";")),c.node)c.node.appendChild(iframe);else{const a=c.selector?document.querySelector(c.selector):document.body;a?a.appendChild(iframe):(console.warn("Couldn't find any elements matching \"".concat(c.selector,"\", appending \"iframe\" to \"body\" instead.")),document.body.appendChild(iframe))}return iframe.onload=()=>{targetWindow=iframe.contentWindow,this.initPostMessage(c),evHandlers.onLoad&&evHandlers.onLoad()},null}},initPostMessage(a){const b=setInterval(()=>{const b={type:PING_EVENT,selector:a.selector,sdkVersion:CONNECT_SDK_VERSION,platform:"".concat(a.popup?PLATFORM_POPUP:PLATFORM_IFRAME)};a.redirectUrl&&(b.redirectUrl=a.redirectUrl),this.postMessage(b)},1e3);onMessageFn=c=>{const d=c.data.data,e=c.data.type;if(c.origin===connectOrigin)if(e===ACK_EVENT&&!a.popup)clearInterval(b);else if(e===URL_EVENT)this.openPopupWindow(c.data.url);else if(e===DONE_EVENT)evHandlers.onDone(d),this.destroy();else if(e===CANCEL_EVENT)evHandlers.onCancel(d),this.destroy();else if(e===ERROR_EVENT)evHandlers.onError(d),this.destroy();else if(e===ROUTE_EVENT)evHandlers.onRoute&&evHandlers.onRoute(d);else if(e===USER_EVENT)evHandlers.onUser&&evHandlers.onUser(d);else if(e===CLOSE_POPUP_EVENT){var f;null===(f=popupWindow)||void 0===f||f.close()}},window.addEventListener("message",onMessageFn)},openPopupWindow(a){const b=window.self.outerHeight/2+window.self.screenY-POPUP_HEIGHT/2,c=window.self.outerWidth/2+window.self.screenX-POPUP_WIDTH/2;if(popupWindow=window.open(a,"targetWindow","toolbar=no,location=no,status=no,menubar=no,width=".concat(POPUP_WIDTH,",height=").concat(POPUP_HEIGHT,",top=").concat(b,",left=").concat(c)),popupWindow){popupWindow.focus();const a=setInterval(()=>{var b;null!==(b=popupWindow)&&void 0!==b&&b.closed&&(clearInterval(a),this.postMessage({type:WINDOW_EVENT,closed:!0,blocked:!1}))},1e3)}else this.postMessage({type:WINDOW_EVENT,closed:!0,blocked:!0})},postMessage(a){var b;null===(b=targetWindow)||void 0===b||b.postMessage(a,connectUrl)}};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,